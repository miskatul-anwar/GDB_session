exit
exit
exit
b main
b fibonacci 
b loop 
r
n
n
n
n
n
tui enable 
n
s
n
n
n
n
n
n
info frame
up
up
down
down
s
n
n
n
n
s
p a
p n
n
s
n
finish 
finish 
n
n
finish
delete 
finish
!echo $?
!echo $?
!echo 0?
!echo $?
!echo $?
file code3
l
l
tui enable 
b main
r
(gdb) catch signal SIGSEGV
catch signal SIGSEGV 
c
c
b main
r
catch signal SIGFPE 
c
c
delete 
catch signal SIGFPE
r
info threads 
rc
bt
file code5
file code4
b main
b loop
b fibonacci 
r
n
n
set tui border-kind space 
set tui border-kind ascii
set tui border-kind acs
s
n
s
bt
info threads 
rc
up
up
down
down
down
bt
up
up
p ----------------
p "-------------"
(gdb) print "----- Section Header -------------------------------------------"
print "-=========hi=========="
set prompt \n----------------------------------------\n\032(GDB) \032
ls
exit
b main
tui enable 
r
record full
r
n
n
s
n
n
s
exit
exit
record full
b main
r
record full
tui enable 
n
q
b main
r
record 
record full
n
n
exit
b main
n
r
record full 
n
n
exit
b main
r
record full 
r
n
n
record stop 
exit
record full
exit
record full
exit
b main
r
frame 
n
tui enable 
n
s
info frame
frame
up
down
frame 1
frame 2
frame 0
n
n
clear
exit
b main
overlay 
info overlay
r
info overlay
info overlays
info args
info locals
info overlays
overlay add cse116 0x2222 0x4444
overlay add csedf 
b main
r
set scheduler-locking on
l
tui
tui enable 
refresh 
clear
n
n
s
n
s
n
s
l
exit
b main
info threads
thread
frame
r
tui enable 
file code3
b main
r
n
n
b 8
c
b main
b 8
info breakpoints 
delete 
clear 
clear
refresh
b main
b 8
r 
check
n
ni
reverse-next
n
n
n
n
p i
n
n
info checkpoints 
reset
b main
r
checkpoint 
n
ni
reset
restore 
restart 
restart 1
c
n
n
restart 1
info
r
checkpoint 
catch signal SIGFPE
c
info catch
info checkpoints 
n
restore 1
restart 1
watch i
n
exit
